<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Kaze's Mind</title>
<generator uri="https://github.com/jekyll/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml" />
<link rel="alternate" type="text/html" href="http://localhost:4000" />
<updated>2021-11-04T20:54:16+00:00</updated>
<id>http://localhost:4000/</id>
<author>
  <name>Luiz Guilherme</name>
  <uri>http://localhost:4000/</uri>
  <email>luiz@kaze.io</email>
</author>


<entry>
  <title type="html"><![CDATA[Leaving the Comfort Zone (for the Second Time)]]></title>
  <link rel="alternate" type="text/html" href="http://localhost:4000/personal/leaving-the-comfort-zone-for-the-second-time/" />
  <id>http://localhost:4000/personal/leaving-the-comfort-zone-for-the-second-time</id>
  <published>2017-11-30T12:24:21+00:00</published>
  <updated>2017-11-30T12:24:21+00:00</updated>
  <author>
    <name>Luiz Guilherme</name>
    <uri>http://localhost:4000</uri>
    <email>luiz@kaze.io</email>
  </author>
  <content type="html">&lt;p&gt;It’s been a while since I last wrote in here. Today I’d like to share a thought that I recently had about some few stuff that has being going on around me lately. Two years ago I took a decision that many people considered “risky” (at some point insane). I decided to quit my job (relatively stable one and paying pretty good for Brazilian standards) and leave my country. In my head this decision made a lot of sense and a many people didn’t realize it. I did a quick exercise, I got a pen and paper and put on one side how I was at the time and and in the other how I wanted to be in that moment. The columns were completely different, so I decided to connect the dots and figure out how I will go to my objective from I was at the moment. These lines were the ideas that I started to created. From that I decided many things, including leaving Brazil. I’ll explain it in detail. My biggest objective was always to work in the video-game industry. It is a fascinating area, full of creative people doing products that has to be on the edge of the technology every generation. It was something I dreamed. But I had a very big problem: The Brazilian game industry is not well developed and I had very little experience in the field. I’m not gonna go into details, but at that time it was pretty incipient and paid poorly. Also, because of many personal problems I had to be away from game development for a time. I was pretty sure my future won’t be in Brazil. When I tried to apply abroad I was rejected due my lack of experience, so many companies couldn’t afford to justify hiring me ( also Visa, relocation and other factors were taking into consideration ).&lt;/p&gt;

&lt;p&gt;It was in this scenario that I decided that moving from Brazil on my own will make my chances better. If I could sustain myself, build a portfolio and talk face-to-face with the companies this will make the difference. So with a cold-minded approach I made plannings, research and quotations to decided where to go. I came to Ireland due to many things likes: Easiness to get visas, Courses, Friends already living in here, English spoken country, and the list of game companies in the country (I has kinda fooled in this part, check below). As said, It wasn’t an impulse decision, after deciding the place I did many hypothesis, spreadsheets to calculate how much I’d spend, Plans (always have a plan A, B, C, etc) among others. In the beginning of September 2015 I was approved to enroll a game development course in Ireland which gave me the right to claim a student visa, stay 1 year in the country and work 20h per week. I asked to leave my job at the same week and started to prepare myself to move.&lt;/p&gt;

&lt;p&gt;Change to another city is not easy, change to another country is in a whole different level of difficulty. You can never know the country if you never even visited it. When I came to Ireland I realized that many of the things that were in my plan was a bit odd. For instance, I discovered that all big companies in my list of game companies were not developing in Ireland, only doing QA and Localisation, which led me to a bad situation since I was hoping to get a job soon. Another thing was the lack of support that I got from the college I was doing my course. I almost got deported because they were giving me wrong docs. After the initial problems, I didn’t give up and continue my plan. In about 4 months I got a job as a Video Game Programmer in a company that was just starting to operate in town.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;figure&gt;
     &lt;a href=&quot;/images/comfortzone00.jpg&quot;&gt;&lt;img src=&quot;/images/comfortzone00.jpg&quot; alt=&quot;The box of Age of Empires&quot; align=&quot;middle&quot; /&gt;&lt;/a&gt;
 
     &lt;figcaption&gt;The box of Age of Empires&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;I couldn’t be happier. I left Brazil and quickly got the job that I wanted. In less than 1 year I got stable and paid back my investment. It’s been already 2 years that I live in Ireland. I have friends, play in a pub every tuesday, got my graduation at Kendo, to sum up I have an amazing quality of life in here. Many people who said I was crazy a while ago actually came to me asking how I did it. I didn’t find this sudden change odd or so since many people doesn’t see the opportunities in front of them. I always tried to help as much as I could (although in certain cases I wouldn’t recommend doing it).&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;figure&gt;
     &lt;a href=&quot;/images/comfortzone01.jpg&quot;&gt;&lt;img src=&quot;/images/comfortzone01.jpg&quot; alt=&quot;The box of Age of Empires&quot; align=&quot;middle&quot; /&gt;&lt;/a&gt;
 
     &lt;figcaption&gt;The box of Age of Empires&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;After reading all this you should be asking yourself, why leave your comfort zone again? I got everything I wanted, I could be calm in the city and in the job that took me. Well, no. I recently decided to move again. I also decided that I should move to another country. One thing that I believe is that we should always move forward. To accommodate is not something I believe. Having this good ambition makes you a better professional. Unfortunately, I feel that in Brazil people value too much the mediocrity, the “It is good the way it is”, the “stability” instead of the personal progress. This is also another discussion.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;figure&gt;
     &lt;a href=&quot;/images/comfortzone02.jpg&quot;&gt;&lt;img src=&quot;/images/comfortzone02.jpg&quot; alt=&quot;The box of Age of Empires&quot; align=&quot;middle&quot; /&gt;&lt;/a&gt;
 
     &lt;figcaption&gt;The box of Age of Empires&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;At the beginning of the year, as part of my annual objective plan, I’ve stated some objectives for myself. One of the things I wanted is a senior/lead promotion. I saw that even though I didn’t had the gaming experience I was going really well at the company even solving hard problems with my past experience helping. I always liked the managing part of games as well, always volunteering to do some administrative work when needed. Another big objective was a raise in my salary. Although I got the job that I wanted I was earning less than usual for many different reasons. Again, I just put two columns on a paper and started to solve my problem.&lt;/p&gt;

&lt;p&gt;At first I tried to solve it internally at my company. Unfortunately, because of reasons that are not important at the moment this wasn’t possible. Some few stuff that happened in the mean time at the company also made me think about the company itself. Afterwards, I started to apply to many companies in other countries ( based in a criteria that I created ) and finally got a position where I will deal with more technical management and with a better salary. In 2 weeks I will be moving to another job, to another country, I will have more initial surprises, more friend and more experiences to share.&lt;/p&gt;

&lt;p&gt;From this little big text I would like to get some lessons that has been with me for a while:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Don’t let your comfort zone limit yourself. Provoke yourself always! Think if at the moment you have what you want, or if you will have opportunities to grow&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Plan! When you are about to do a big decision have a plan A, B, C, etc. But, don’t be afraid to execute those plans.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Learn how to listen to external criticism, filter the bad ones and learn with the good ones&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If you’re young, this is the time to do something risky&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Maybe your first path won’t be correct, or definitive. You will have many steps to fulfill before going to that main objective of yours&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Every time you achieve something, review your objectives, create new ones and the most important: celebrate!&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To finish, the search for your happiness will require sometimes courage and bold decisions. Do it while you can. Learn with your mistakes and enjoy life.&lt;/p&gt;

&lt;p&gt;Thanks for reading it. I hope this text will help you somehow.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://localhost:4000/personal/leaving-the-comfort-zone-for-the-second-time/&quot;&gt;Leaving the Comfort Zone (for the Second Time)&lt;/a&gt; was originally published by Luiz Guilherme at &lt;a href=&quot;http://localhost:4000&quot;&gt;Kaze's Mind&lt;/a&gt; on November 30, 2017.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Global Game Jam 2016 - Thoughts, Experiences and a Small Post-Mortem]]></title>
  <link rel="alternate" type="text/html" href="http://localhost:4000/game/development/global-game-jam-2016-thoughts-experiences-and-a-small-post-mortem/" />
  <id>http://localhost:4000/game/development/global-game-jam-2016-thoughts-experiences-and-a-small-post-mortem</id>
  <published>2016-02-02T16:00:01+00:00</published>
  <updated>2016-02-02T16:00:01+00:00</updated>
  <author>
    <name>Luiz Guilherme</name>
    <uri>http://localhost:4000</uri>
    <email>luiz@kaze.io</email>
  </author>
  <content type="html">&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/_31I5EgdLmQ&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;It’s been a while since my last post, sorry about that =)&lt;/p&gt;

&lt;p&gt;Last weekend I attended to the Global Game Jam here in Dublin. For the ones who doesn’t know, it is a worldwide event where you meet new people, make friends, don’t sleep good, complain about crashing engines and make a game in 48h. It is a perfect time to learn, try new game design possibilities, do networking, and last but not least: have fun making games. In the end, you will surely made new friends, and had a great time.&lt;/p&gt;

&lt;p&gt;Today I’ll express some of the thoughts and experiences I had during the event that are worth sharing. The game I’ve worked is called Uku and can be seen at http://globalgamejam.org/2016/games/uku . I did all the programming, Ukulele songs (YEAH!) and Game Design with all the others.&lt;/p&gt;

&lt;p&gt;Id’ like also to thank the team I worked with. Eveliina Durchman, Josephine Wagner and Cian Burke. They are amazing teammates and very talented professionals as well.&lt;/p&gt;

&lt;p&gt;The project is also hosted at github: &lt;a href=&quot;https://github.com/kazenotenshi/GlobalGameJam2016&quot;&gt; https://github.com/kazenotenshi/GlobalGameJam2016 &lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;small-teams&quot;&gt;Small Teams&lt;/h2&gt;

&lt;p&gt;Before the Jam, I had a mindset of be in a group of 3 people. In the end we finished with one more but It added another skillset to our team. I saw some teams of 7 people where it was very hard to manage that. Also smaller teams has a better communication which I’ll talk further.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;figure&gt;
     &lt;a href=&quot;/images/theGGJTeam.jpg&quot;&gt;&lt;img src=&quot;/images/theGGJTeam.jpg&quot; alt=&quot;The team. In the back, from Left to Right: Eveliina, Josephine and Cian. I'm in red with the ukulele.&quot; align=&quot;middle&quot; /&gt;&lt;/a&gt;
 
     &lt;figcaption&gt;The team. In the back, from Left to Right: Eveliina, Josephine and Cian. I'm in red with the ukulele.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h2 id=&quot;managing-scope&quot;&gt;Managing Scope&lt;/h2&gt;

&lt;p&gt;The first thought I wanted to share is about project scope. Most of the times at the beginning of jam (Friday night) is reserved for the Brainstorming and Game Design. This year the theme was “Ritual”. In my opinion it gave the gamers a wide variety of ideas. We ourselves brainstormed from personal rituals (habits, OCD and other stuff) till witches and some dark ideas like reviving people.&lt;/p&gt;

&lt;p&gt;We decided to do a simple thing: Make a god ( goddess in our case ) happy. We dig up (as quick as we could) into the Hawaiian Mythology and discovered many cool stories and legends! Although we based our game in this legends we decided not to explicit refer it because for design purposes we have changed few things.&lt;/p&gt;

&lt;p&gt;After that, came the question “What would our mechanics be”? After another quick brainstorming we decided to create a 2D bottom-up platformer with a pressure element. Again, we put on the table each one’s ability and how everyone can contribute to the group.&lt;/p&gt;

&lt;p&gt;Other thing that is important to mention is preparations. Before the game jam we decided which tools to use and I researched a set of assets to use before hand trying to anticipate which kind of game we want to make. The engine used was unity which itself has tons of tools, free assets at asset store and is widely used by all of us.&lt;/p&gt;

&lt;p&gt;Some of the assets we used before hand were:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;2D Dev Sprites (&lt;a href=&quot;http://u3d.as/6nk&quot;&gt;http://u3d.as/6nk&lt;/a&gt;) : Perfect for mock up levels and use it as platforms&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;BitStrap (&lt;a href=&quot;http://u3d.as/mF1&quot;&gt;http://u3d.as/mF1&lt;/a&gt;) : I just found this recently and it is a set of libraries and tools for math, animation, inspector and others that saves a lot of time. For instance you can get their singleton class and just made every singleton in the code inherit from it.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Game Jam Menu Template (&lt;a href=&quot;http://u3d.as/hvQ&quot;&gt;http://u3d.as/hvQ&lt;/a&gt;) : Provided by unity, is is hand because it creates a quick menu for you and configure the audio mixer for music and FX&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Standard Assets (&lt;a href=&quot;hhttp://u3d.as/cg6&quot;&gt;http://u3d.as/cg6&lt;/a&gt;) : Again from Unity, provides a set of basic scripts, animations and other resources. Why make everything again if they provide 2D character movement for free? Off course you need to adapt it for your game, but is a straightforward approach in my opinion.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;figure&gt;
     &lt;a href=&quot;/images/preparations.jpg&quot;&gt;&lt;img src=&quot;/images/preparations.jpg&quot; alt=&quot;Preparing to the jam, food, food and more food =)&quot; align=&quot;middle&quot; /&gt;&lt;/a&gt;
 
     &lt;figcaption&gt;Preparing to the jam, food, food and more food =)&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h2 id=&quot;communication&quot;&gt;Communication&lt;/h2&gt;

&lt;p&gt;Like in a workspace, the better way to maintain the communication between the team is having people next to each other and set up roles clearly and a process of work. In our team we had artists, animators/level designer, and me as programmer.&lt;/p&gt;

&lt;p&gt;We decide that everyone had freedom to do what they want and if the want some feedback or opinion they call all the team for a quick meeting. Also, the art team set up an asset list for them to make the work goes as fast as possible and don’t lose track of each feature that has to be made. I decided to organize my work using trello for managing the tasks and github for source code management which saved me a lot of time and saved my project sometimes.&lt;/p&gt;

&lt;p&gt;All the assets were uploaded to a shared folder at google drive where every time that I need some asset to put in the project I just need to quick check this folder for it. In between I’d use placeholders to create the logic before the assets were done, and make few fixing when we place the final art.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;figure&gt;
     &lt;a href=&quot;/images/RickRollPlaceholder.png&quot;&gt;&lt;img src=&quot;/images/RickRollPlaceholder.png&quot; alt=&quot;Replacing some assets by Rick Astley made us remember to put some assets&quot; align=&quot;middle&quot; /&gt;&lt;/a&gt;
 
     &lt;figcaption&gt;Replacing some assets by Rick Astley made us remember to put some assets&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h2 id=&quot;respect-your-and-others-limits&quot;&gt;Respect your and others limits&lt;/h2&gt;

&lt;p&gt;Although you make a lot of friends and have a lot of fun, there’s something we must track at all times during a jam, your mental health. Sometimes after 5h, 6h in a row working we start to make stupid mistakes and/or feeling bad. It is common to eat not so healthy ( I do not regret any pizza ) and drink a lot of energetic drinks to keep the pacing. I have a very strict opinion about it: Your health is way more important than the jam. The pressure of the 48h sometimes affect people’s mind and they forget it easily. It is important for the whole team to support that. If there’s a person feeling not so good, or drinking too much energetic drinks everyone should make clear that he/she has to take a break. Particularly about the programming side it made me avoid stupid mistakes. Every time that I realized that I was make rollbacks in the source code because of my mistakes and/or I was taking too much time to program a simple thing I’d lock the screen and walk around. Most of the tunes of the game were recorded during these breaks as a form of relaxing.&lt;/p&gt;

&lt;p&gt;Another limit that shall always be aware for everyone of the team are your skills limits. Although the game jam is an opportunity to learn new things, you’re not going to develop some skills just because of the 48h pressure. If you’re not a senior programmer you’re not gonna make a complex RPG system in 48h. If you’re not a hell of a good animator you’re not gonna make a pixar like cutscene for the game in time. Keep it simple, if it is necessary cut down the design for now and try to make the smallest proof of concept possible. We decided to make only one level because of that. Other teams decided to cut down some interactions or making a visual novel game because they didn’t have a programmer among them. If you’re not an artist make it with blocks and maintain this as an “art style” =). The most important thing is to use your skillset and have a playable product in the end.&lt;/p&gt;

&lt;h2 id=&quot;polishing-time-aka-cutting-things&quot;&gt;Polishing Time a.k.a Cutting Things&lt;/h2&gt;

&lt;p&gt;Polishing time can be known as the “stop new features” time. It is important to set a proper time for it regardless how the development is going. If you forget it, odds are that you will try to make in the last 3 or 4 hours and it won’t be polished enough. In our case we decided to stop any new feature after 24h. A meeting was made at the night of the second day to decide what we were going to cut. Hopefully we managed the scope accurately, making us cut just some few animations and features (like a more complex tutorial).&lt;/p&gt;

&lt;h2 id=&quot;final-product&quot;&gt;Final Product&lt;/h2&gt;

&lt;p&gt;Before release, play it and let other people play it. We discovered so many bugs just my getting the build and showing it to some people. Also, get the project and run in another computer before releasing. Know your requirements and put it explicitly in the description. Tell which version of the engine you used. If you just tested the game for one resolution say that it only works in that resolution, period. The important thing here is, make sure that after you upload your project you’d have the less people having troubles to execute it.&lt;/p&gt;

&lt;p&gt;I’m proud of my team of making it viable and have a playable version at the end with few bugs and art mistakes.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;figure&gt;
     &lt;a href=&quot;/images/UkuHeader.png&quot;&gt;&lt;img src=&quot;/images/UkuHeader.png&quot; alt=&quot;Our Game: Uku&quot; align=&quot;middle&quot; /&gt;&lt;/a&gt;
 
     &lt;figcaption&gt;Our Game: Uku&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;The Global Game Jam is for game developers an amazing opportunity to meet new people, learn new things, have fun, create more portfolio and eating pizza while you listen to ukuleles in our case. Mind your scope and your limits. Respect people’s limits as well, and know that are more things important at stake. Do something you are proud of, and it will be valuable for you personally and professionally. And always have fun.&lt;/p&gt;

&lt;p&gt;Thanks for reading =)&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://localhost:4000/game/development/global-game-jam-2016-thoughts-experiences-and-a-small-post-mortem/&quot;&gt;Global Game Jam 2016 - Thoughts, Experiences and a Small Post-Mortem&lt;/a&gt; was originally published by Luiz Guilherme at &lt;a href=&quot;http://localhost:4000&quot;&gt;Kaze's Mind&lt;/a&gt; on February 02, 2016.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[The Big Change]]></title>
  <link rel="alternate" type="text/html" href="http://localhost:4000/personal/the-big-change/" />
  <id>http://localhost:4000/personal/the-big-change</id>
  <published>2015-10-11T14:19:05+01:00</published>
  <updated>2015-10-11T14:19:05+01:00</updated>
  <author>
    <name>Luiz Guilherme</name>
    <uri>http://localhost:4000</uri>
    <email>luiz@kaze.io</email>
  </author>
  <content type="html">&lt;p&gt;So, it’s been 3 months since my last post in here. Right now I don’t have too much time to update this, but I’ll be back shortly. But, an explanation is needed.&lt;/p&gt;

&lt;p&gt;Well, my life just had a big change, for good I hope. I always had a dream of working with digital games. I’ve been studying for a while. Did my bachelor’s, my master’s all in computer graphics field, which I think it is one of the ways to get in the industry. But then I forgot something, the country that I was doesn’t have a game industry well established. No matter what I studied I could not pay my bills working in games there.&lt;/p&gt;

&lt;p&gt;That’s sad, but it is true. For a 200 million people country, games and technology weren’t the government priorities. There still some companies that stands out of the difficulties, make good games and stay alive alike most of them, but I could not rely on that anymore. For instance, I worked in 2 game companies during my time in Brazil. Both don’t exist anymore and in that time I got half of the salary of my last job as researcher in Brazil.&lt;/p&gt;

&lt;p&gt;So I decided to make something really really groundbreaking, I quit my job, and came to Ireland. Why? because I could not look at this dream on my shelf anymore without doing nothing to accomplish it. Also, I could not risk trying to do this at my own country since it was riskier than doing somewhere else. That is somewhat nonsense for people outside Brazil to think, but for the ones that lived there, and know how greedy the government is, this move makes a lot of sense.&lt;/p&gt;

&lt;p&gt;My idea is to make a Game Development course in Dublin ( where I am now ), boost my portfolio ( which was on hold for a while ), learn, work a lot, and have nice experiences. That’s something big for me. I’ve never lived in another country. And seems like a big risk for me as well. Well, sometimes changing is necessary.&lt;/p&gt;

&lt;p&gt;Thanks for reading, and If you have a similar experience that you’d like to share, just post in the comments =)&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;http://localhost:4000/personal/the-big-change/&quot;&gt;The Big Change&lt;/a&gt; was originally published by Luiz Guilherme at &lt;a href=&quot;http://localhost:4000&quot;&gt;Kaze's Mind&lt;/a&gt; on October 11, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Asteroid's Game: Player Input]]></title>
  <link rel="alternate" type="text/html" href="http://localhost:4000/gamedev/programming/unity3d/asteroids-game-player-input/" />
  <id>http://localhost:4000/gamedev/programming/unity3d/asteroids-game-player-input</id>
  <published>2015-07-29T23:45:40+01:00</published>
  <updated>2015-07-29T23:45:40+01:00</updated>
  <author>
    <name>Luiz Guilherme</name>
    <uri>http://localhost:4000</uri>
    <email>luiz@kaze.io</email>
  </author>
  <content type="html">&lt;p&gt;Hi! After the Unity quick tips, I have decided to invest a little more time sharing some insights and Unity tips in this blog, rather than only share my updates in the P.hD Thesis and other random stuff.&lt;/p&gt;

&lt;p&gt;To Start, I choose one of the classics games ever, Asteroids. I remember playing this little game when I was a young man, and like all games, it could teach a lot of small concepts of the engine right away.&lt;/p&gt;

&lt;p&gt;This part will cover the input control of the ship. The code is available at &lt;a href=&quot;https://github.com/kazenotenshi/MyAsteroids&amp;gt;Github&quot;&gt;Github&lt;/a&gt; if you like. Let’s go!&lt;/p&gt;

&lt;h2 id=&quot;starting-the-project&quot;&gt;Starting the project&lt;/h2&gt;

&lt;p&gt;Download Unity ( if you didn’t already ) at &lt;a href=&quot;http://unity3d.com&quot;&gt;http://unity3d.com&lt;/a&gt; and open it. Start a new project, and set is as a 2D project. For now we don’t need any standard asset. Just click on create and wait until Unity do all the necessary preps to initiate the project.&lt;/p&gt;

&lt;h2 id=&quot;the-spaceship&quot;&gt;The Spaceship&lt;/h2&gt;

&lt;p&gt;I must say, I’m not an artist. But recently I found a great app to make sprite animations and atlases in an easy way than even the worst programmer artist wannabe can use, it is called &lt;a href=&quot;http://www.piskelapp.com/&quot;&gt;Piskel&lt;/a&gt;. I have created a space ship as follows:&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;figure&gt;
     &lt;a href=&quot;/images/l0_sprite_1.png&quot;&gt;&lt;img src=&quot;/images/l0_sprite_1.png&quot; alt=&quot;I'm not an artist =)&quot; align=&quot;middle&quot; width=&quot;200&quot; /&gt;&lt;/a&gt;
 
     &lt;figcaption&gt;My Spaceship&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;For the purposes of this tutorial, I’ll just focus on this particular sprite. I have created some sort of animation, that I’ll talk later.&lt;/p&gt;

&lt;h2 id=&quot;the-input-script&quot;&gt;The input script&lt;/h2&gt;

&lt;p&gt;The main objective of this script is to get the input of the player and reflect it inside of the game. The input could be either from the keyboard or from a joystick in this case. There are several ways to do it, one is using the input axes. In the Asteroids Game, the vertical axes reflects an up/down translation of the ship. The horizontal applies a rotation to it.&lt;/p&gt;

&lt;p&gt;Go to “Create Game Object” and then in the “2D Object -&amp;gt; Sprite” to create a new 2D object from a sprite. Name it “SpaceShip”, find the sprite inside the project area and drag it to the Game Object. Make sure that it is inside the camera’s view. Add a a Rigidbody2D Component to the game object you just created at Component -&amp;gt; Physics2D -&amp;gt; Rigidbody2D. The result should be something like this:&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;figure&gt;
     &lt;a href=&quot;/images/axesSpaceship.png&quot;&gt;&lt;img src=&quot;/images/axesSpaceship.png&quot; alt=&quot;Ship inside Unity&quot; align=&quot;middle&quot; width=&quot;200&quot; /&gt;&lt;/a&gt;
 
     &lt;figcaption&gt;Spaceship inside the Unity's view&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Now let’s start the script. In the project tab, do a right click and and choose “Create -&amp;gt; C#” script. Name it “SpaceshipInput”, and then click and drag it to the Game Object you just created. Just a quick advise. As the project gets bigger it is nice if you organize the project area into folders. It will help you later to find the assets quickly. Double click in the script in the project area to open the default script editor. If you did not &lt;a href=&quot;http://kaze.io/game/development/unity-quick-tips-using-microsoft-visual-studio-code-instead-of-monodevelop/&quot;&gt;change it like me&lt;/a&gt;, it should be MonoDevelop.&lt;/p&gt;

&lt;p&gt;Unity always creates a standard template where the script inherits from MonoBehaviour and has two functions: Start and Update. Start is a function that is called once, on the frame when a script is enabled, before the first update. Update on the other hand, is called every frame. There are others derived methods from MonoBehaviour that is worth knowing. Refer to the &lt;a href=&quot;http://docs.unity3d.com/ScriptReference/MonoBehaviour.html&quot;&gt;Official Documentation&lt;/a&gt; and look at other functions.&lt;/p&gt;

&lt;p&gt;Let’s Start creating two public variables called speed and rotationSpeed inside the class, just before the Start function.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;UnityEngine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Collections&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SpaceshipInput&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MonoBehaviour&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;//Speeds&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Vector2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;speed&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Vector2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10.0F&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rotationSpeed&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200.0f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// Use this for initialization&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	
	&lt;span class=&quot;c1&quot;&gt;// Update is called once per frame&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Notice that the default values were already set. If you go to the inspector at Unity’s editor, these two variables will appear there. Go there and set some default values to the Rigidbody2D Component as well. Put a very small Gravity Scale, keep the angular drag and the mass at 1. The result would be something like this:&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;figure&gt;
     &lt;a href=&quot;/images/ViewWithScript.png&quot;&gt;&lt;img src=&quot;/images/ViewWithScript.png&quot; alt=&quot;Script is successfully attached&quot; align=&quot;middle&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;
 
     &lt;figcaption&gt;Spaceship inside the Unity's view&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Ok, our variables are set. The idea now is to get the input from the player, and move the Space Ship around. I’d start with the rotation. Input.GetAxis function will give us a value in [-1,1] range from a keyboard or a joystick input. We should say which Axis are we in ( Horizontal, or vertical ). In this case would be the Vertical one. The code should be called every frame to check if the user is still holding the left/right key or toggling the joystick in these directions. After that, we should get a relative time from the last frame and apply the rotation in the Z axis. The code is:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;	&lt;span class=&quot;c1&quot;&gt;// Update is called once per frame&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;//Deal with rotation first&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rotation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetAxis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Horizontal&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rotationSpeed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;rotation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;*=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deltaTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Rotate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rotation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;What it does? Every frame, we will get a value between -1 and 1 from the horizontal axis, multiply that to our rotationSpeed and to the deltaTime which is the time in seconds it took to complete the last frame. After that the code applies the rotation to the Game Object’s transform class.&lt;/p&gt;

&lt;p&gt;The Translation uses the same concept, but we will not do an affine transformation here, we will use physics instead. Why? Because we’re in space, and the movement should reproduce its environment. Also, our ship is an outdated model that does not have reverse, sorry for that =). Continuing our code:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;	&lt;span class=&quot;c1&quot;&gt;// Update is called once per frame&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;//Deal with rotation first&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rotation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetAxis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Horizontal&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rotationSpeed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;rotation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;*=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deltaTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Rotate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rotation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

		&lt;span class=&quot;c1&quot;&gt;//Translation is an special case, only occurs if the player wants to go up!&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetAxis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Vertical&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;Vector2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;translation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetAxis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Vertical&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;speed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;translation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;*=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deltaTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;GetComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Rigidbody2D&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;().&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddRelativeForce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;translation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ForceMode2D&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Impulse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Translation is now a 2D Vector that will get the value from the player input and multiply with our pre specified speed and the deltaTime. Differently from the rotation, we will now apply a relative force to the object. The force type is an impulse case it reflects the engines impulsion in a real spaceship. It is relative because we want it to go up in the ship’s perspective, not the world’s perspective. So if we do any kind of rotation, the force will be applied relatively to the ship’s coordinate system at the time. The final code is:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;UnityEngine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Collections&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SpaceshipInput&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MonoBehaviour&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;//Speeds&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Vector2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;speed&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Vector2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10.0F&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rotationSpeed&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200.0f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// Use this for initialization&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	
	&lt;span class=&quot;c1&quot;&gt;// Update is called once per frame&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;//Deal with rotation first&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rotation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetAxis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Horizontal&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rotationSpeed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;rotation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;*=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deltaTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Rotate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rotation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        
		&lt;span class=&quot;c1&quot;&gt;//Translation is an special case, only occurs if the player wants to go up!&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetAxis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Vertical&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;Vector2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;translation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetAxis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Vertical&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;speed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;translation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;*=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deltaTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;GetComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Rigidbody2D&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;().&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddRelativeForce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;translation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ForceMode2D&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Impulse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;That’s enough for now. Next post I’ll solve one problem that this code creates. If you have any comment I’ll be glad to help. See ya!&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;http://localhost:4000/gamedev/programming/unity3d/asteroids-game-player-input/&quot;&gt;Asteroid's Game: Player Input&lt;/a&gt; was originally published by Luiz Guilherme at &lt;a href=&quot;http://localhost:4000&quot;&gt;Kaze's Mind&lt;/a&gt; on July 29, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Unity Quick Tips: Using Microsoft Visual Studio Code Instead of MonoDevelop]]></title>
  <link rel="alternate" type="text/html" href="http://localhost:4000/game/development/unity-quick-tips-using-microsoft-visual-studio-code-instead-of-monodevelop/" />
  <id>http://localhost:4000/game/development/unity-quick-tips-using-microsoft-visual-studio-code-instead-of-monodevelop</id>
  <published>2015-07-05T01:32:42+01:00</published>
  <updated>2015-07-05T01:32:42+01:00</updated>
  <author>
    <name>Luiz Guilherme</name>
    <uri>http://localhost:4000</uri>
    <email>luiz@kaze.io</email>
  </author>
  <content type="html">&lt;p&gt;Hi everyone, last week I decided to start something new here. I’ll be posting some small tips of using Unity3D once in a while. Why? Because I love Game Development. Even though I’m not working with it right now, I always create some stuff in my spare time. Since this is my first talk, I’d like to make a quick introduction on Unity, and then start the main objective of this article, that will be changing Unity’s default IDE.&lt;/p&gt;

&lt;p&gt;If you like this article, I want that you take a moment and vote into Unity’s website and Microsoft’s web site to make this integration between Unity and Visual Studio Code be more effective.&lt;/p&gt;

&lt;p&gt;On Unity’s side: &lt;a href=&quot;http://www.garycmartin.com/mouth_shapes.html&amp;lt;/a&amp;gt;http://feedback.unity3d.com/suggestions/visual-studio-code-integration?page=1#comments&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On Microsoft’s side: &lt;a href=&quot;http://visualstudio.uservoice.com/forums/293070-visual-studio-code/suggestions/7752702-unity-integration&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s start!&lt;/p&gt;

&lt;h2 id=&quot;what-is-unity3d&quot;&gt;What is Unity3D?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://unity3d.com&quot;&gt;Unity3D&lt;/a&gt; is a very very nice game engine. I’ve been using it since the version 3 for many different purposes. From research, to serious games and Game development itself. Recently they also did a very good job making it first of all, free, and also with 2D support. It compiles to almost every well known platform ( mobile, desktops, web and consoles ).&lt;/p&gt;

&lt;p&gt;If you’re interested, the learning curve isn’t that hard. The development can be made in C# and/or Javascript. For tutorials please visit their &lt;a href=&quot;https://unity3d.com/learn/tutorials/modules&quot;&gt;Tutorial Page&lt;/a&gt;. Everything is there. And I also recommend that you check &lt;a href=&quot;https://unity-game-development.zeef.com/adrian.anta&quot;&gt;this page&lt;/a&gt;. He was made a very nice indexing of useful websites for Game Development and Assets that you may need.&lt;/p&gt;

&lt;h2 id=&quot;what-is-visual-studio-code-and-why-should-we-use-it&quot;&gt;What is Visual Studio Code, and why should we use it&lt;/h2&gt;

&lt;p&gt;The default IDE for Unity is MonoDevelop. Why? It is portable for Windows and OSX, Unity uses the mono project compiler, and so on. Nevertheless, the IDE is not that good. Microsoft’s Visual Studio inside Windows is unbeatable. That’s why unity offers &lt;a href=&quot;http://docs.unity3d.com/Manual/VisualStudioIntegration.html&quot;&gt;an integration&lt;/a&gt; with it on windows. The are two problems here: 1 - And if I’m using windows and I don’t have a VS license?, and 2 - and if I’m an OSX user? Well, I’m on the second list.&lt;/p&gt;

&lt;p&gt;Hopefully Microsoft released a product called &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt; which is a lightweight IDE with intellisense for windows, linux and OSX. Did I mentioned that it is also free? And it has a great integration with Git as well. For me, this is a perfect alternative to Mono.&lt;/p&gt;

&lt;h2 id=&quot;how-to-change-the-default-ide&quot;&gt;How to change the default IDE&lt;/h2&gt;

&lt;p&gt;Three easy steps to start using Visual Studio Code on Unity:&lt;/p&gt;

&lt;p&gt;###1. Sync the Project.&lt;/p&gt;

&lt;p&gt;Go to Assets -&amp;gt; Sync MonoDevelop project&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;figure&gt;
     &lt;a href=&quot;/images/unityVSCode001.png&quot;&gt;&lt;img src=&quot;/images/unityVSCode001.png&quot; alt=&quot;Go to Assets -&amp;gt; Sync MonoDevelop project&quot; align=&quot;middle&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;###2. Open Visual Studio and select your project’s folder&lt;/p&gt;

&lt;p&gt;Select the first button on the left, and then press “Open Folder”. Select your Unity’s project root folder and open it.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;figure&gt;
     &lt;a href=&quot;/images/unityVSCode002.png&quot;&gt;&lt;img src=&quot;/images/unityVSCode002.png&quot; alt=&quot;Open Visual Studio and select your project's folder&quot; align=&quot;middle&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;###3. Pick a project inside Unity’s folder
On the bottom left there’s an option called “pick a project”, just beside a flame icon. Select it, and then select the project with the “csharp” ending.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;figure&gt;
     &lt;a href=&quot;/images/unityVSCode003.png&quot;&gt;&lt;img src=&quot;/images/unityVSCode003.png&quot; alt=&quot;Pick a project inside Unity's folder&quot; align=&quot;middle&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Now you should be able to visualize all the scripts within an Unity project and use the Intellisense.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;figure&gt;
     &lt;a href=&quot;/images/unityVSCode004.png&quot;&gt;&lt;img src=&quot;/images/unityVSCode004.png&quot; alt=&quot;Intellisense&quot; align=&quot;middle&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;###4. [Bonus Stage] Making the Visual Code de Default Unity’s IDE&lt;/p&gt;

&lt;p&gt;Even though I am using Visual Studio Code I just didn’t change it inside of Unity. Why? There’s still one main feature that is missing in VSCode for Unity: Debugging. Still, I have maintained the Mono as Unity’s default IDE just as a quick shortcut do open and debug the code. But, if you want to completely giveaway Mono, here’s the step:&lt;/p&gt;

&lt;p&gt;Go to Unity -&amp;gt; Preferences. At the external tools tab open the External Script Editor combo and select “browse”. Find the VS Code app and select it.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;figure&gt;
     &lt;a href=&quot;/images/unityVSCode005.png&quot;&gt;&lt;img src=&quot;/images/unityVSCode005.png&quot; alt=&quot;Changing the default IDE&quot; align=&quot;middle&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h2 id=&quot;pros-and-cons&quot;&gt;Pros and Cons&lt;/h2&gt;

&lt;p&gt;Visual Studio Code definitely has a cleaner environment with a very nice auto-complete feature ( that I think is the best one ). It will make you increase productivity without spending a penny on a good IDE. But, there’s free lunch( at least from now ). You will not be able to debug unity’s code right now. That’s why you should vote for this feature as I mentioned before.&lt;/p&gt;

&lt;p&gt;Hope that this was helpful for any Unity and Non Unity developer that wants to dig into this world. If you have any problems, and something to add please comment below. See ya.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://localhost:4000/game/development/unity-quick-tips-using-microsoft-visual-studio-code-instead-of-monodevelop/&quot;&gt;Unity Quick Tips: Using Microsoft Visual Studio Code Instead of MonoDevelop&lt;/a&gt; was originally published by Luiz Guilherme at &lt;a href=&quot;http://localhost:4000&quot;&gt;Kaze's Mind&lt;/a&gt; on July 04, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Using openCV and NLTK to Make Speech Synthesis Animation]]></title>
  <link rel="alternate" type="text/html" href="http://localhost:4000/programming/using-opencv-and-nltk-to-make-speech-synthesis-animation/" />
  <id>http://localhost:4000/programming/using-opencv-and-nltk-to-make-speech-synthesis-animation</id>
  <published>2015-06-16T13:20:32+01:00</published>
  <updated>2015-06-16T13:20:32+01:00</updated>
  <author>
    <name>Luiz Guilherme</name>
    <uri>http://localhost:4000</uri>
    <email>luiz@kaze.io</email>
  </author>
  <content type="html">&lt;p&gt;The project of this article is hosted at &lt;a href=&quot;http://github.com/kazenotenshi/NLPAnimation&quot;&gt;http://github.com/kazenotenshi/NLPAnimation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All the mouth images where found at &lt;a href=&quot;http://www.garycmartin.com/mouth_shapes.html&quot;&gt;http://www.garycmartin.com/mouth_shapes.html&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;the-beginning&quot;&gt;The Beginning&lt;/h2&gt;

&lt;p&gt;Hello, and if you’re here after a long time, so sorry for the long delay. After I came back from Japan I’ve been working a lot and had few time to continue updating this blog. Today, I’ll discuss and show some code of a prototype ( that is not something really fancy =) ) of an exercise to do some speech synthesis with animations of text files.&lt;/p&gt;

&lt;p&gt;Let’s talk! The main idea is shown below:&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;figure&gt;
     &lt;a href=&quot;/images/SpeechSynthesis.png&quot;&gt;&lt;img src=&quot;/images/SpeechSynthesis.png&quot; alt=&quot;Speech Synthesis Idea&quot; align=&quot;middle&quot; /&gt;&lt;/a&gt;
 
     &lt;figcaption&gt;Speech Synthesis Idea&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;The main ideia is to transform text files into animations with mouth visualization and speech synthesis. To do so, my goal is to pre-process this file and transfer it into phonemes and then use it to generate a synced speech synthesis and image animation. Let’s take a look at how to do it.&lt;/p&gt;

&lt;h2 id=&quot;coding&quot;&gt;Coding&lt;/h2&gt;

&lt;p&gt;The main files of the project are phonemes.py and imageprototype.py. The other ones where just small tests that I had conducted during the development just to verify some assumptions.&lt;/p&gt;

&lt;p&gt;The file phonemes.py is more like a “.h” file to store the image library and the phonemes correspondence to these images that is gonna be really useful during the pre-processing phase. Each word will be translated to a list of phonemes ( e.g: NATURAL = [N ,AE1,CH,ER0,AH0,L] ) and that the global list of phonemes will have an image associated to it. Refer to NLTK Doc ( &lt;a href=&quot;http://www.nltk.org/_modules/nltk/corpus/reader/cmudict.html&quot;&gt;here&lt;/a&gt; ) about how these phonemes work. Along with the phoneme information, NLTK provides some intonation information of every word, it will be useful later. The file phonemes.py has two main structures: mouths and PhonemesToMouth. The file is implemented as shown below:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;cv2&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;nltk&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;## Importing all the mouth images&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mouths&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;./mouths&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endswith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.jpg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;./mouths&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mouths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#print mouths&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#Creating the Dictionary between phonemes and mouths&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;PhonemeToMouth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'AA'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_o.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'AH'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_c_d_g_k_n_r_s_th_y_z.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'AW'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_c_d_g_k_n_r_s_th_y_z.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'AE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_a_i.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'AO'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_o.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'AY'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_a_i.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'B'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_m_b_p.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'CH'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_c_d_g_k_n_r_s_th_y_z.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'DH'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_c_d_g_k_n_r_s_th_y_z.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'D'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_c_d_g_k_n_r_s_th_y_z.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'EH'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_e.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'EY'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_a_i.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'ER'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_u.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'F'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_f_v_d_th.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'G'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_c_d_g_k_n_r_s_th_y_z.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'HH'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_c_d_g_k_n_r_s_th_y_z.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'IY'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_e.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'IH'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_a_i.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'JH'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_c_d_g_k_n_r_s_th_y_z.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'K'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_c_d_g_k_n_r_s_th_y_z.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'L'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_l_d_th.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'M'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_m_b_p.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'NG'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_c_d_g_k_n_r_s_th_y_z.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'N'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_c_d_g_k_n_r_s_th_y_z.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'OY'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_a_i.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'OW'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_o.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'P'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_m_b_p.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'T'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_l_d_th.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'R'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_c_d_g_k_n_r_s_th_y_z.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'SH'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_c_d_g_k_n_r_s_th_y_z.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'S'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_c_d_g_k_n_r_s_th_y_z.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'TH'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_f_v_d_th.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'UH'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_c_d_g_k_n_r_s_th_y_z.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'UW'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_u.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'W'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_w_q.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'V'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_f_v_d_th.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'Y'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_c_d_g_k_n_r_s_th_y_z.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'ZH'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_c_d_g_k_n_r_s_th_y_z.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'Z'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'blair_c_d_g_k_n_r_s_th_y_z.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now, let’s move to the next part. A sample text is written at sample.txt file. The first thing is to translate this file to a [word,phoneme] list. To do it, the program has to open the file, split the string into words using a tokenizer and find all the file correspondences in the phoneme dictionary. The code snippet bellow shows how to open the file, separate it into words, and find the phoneme correspondence to each word in the phoneme dictionary provided by NTLK.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;file_content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sample.txt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tokens&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nltk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word_tokenize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tokens&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;entries&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nltk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmudict&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;start_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;TextToSpeech&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tokens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;TextToSpeech&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A disclaimer: this is not the best optimized way to find words in a big list. Actually, it is really slow right now. For proof of concept purposes it just works. Still, I have some ideias to improve this part, I’ll try some stuff and probably put the results here later.&lt;/p&gt;

&lt;p&gt;The TextToSpeech variable will hold something like:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u'and'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u'AH0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u'N'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u'D'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u'there'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u'DH'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u'EH1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u'R'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now, for every phoneme of every word, the phoneme time has to be inferred, and the proper image has to be shown during the speech. Here comes a harder part. I have researched many different libraries to do the speaking part. And none of then provided me a truly reliable callback to know the time for each word. The one I decided to use was the OSX’s NSSpeechSynthetizer, which is used by pyttsx library. Pyttsx is a python biding for Speech Synthesis in many different OS.&lt;/p&gt;

&lt;p&gt;The hard coded part of this tutorial was to infer what is a normal phoneme, long phoneme and small phoneme. For each word, the program iterates over the list of phonemes and applies the corresponding times to each phoneme before the speech and visual processing. If the phoneme has a number 1 on it, it is a long phoneme, if it has a 0 it is a small one. Take a look at the code below:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;timePerPhoneme&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.15&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;longPhonemeBonus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.05&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;smallPhonemeBonus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.05&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;## For each mouth you should put a refering mouth to show&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;## do the double check&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TextToSpeech&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# Get the right list of mouths&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;timeForAWord&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;timeOfThisPhoneme&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;MouthsToShow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ph&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;phonemes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PhonemeToMouth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'1'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;timeForAWord&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timePerPhoneme&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;longPhonemeBonus&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;timeOfThisPhoneme&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timePerPhoneme&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;longPhonemeBonus&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'0'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;timeForAWord&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timePerPhoneme&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;smallPhonemeBonus&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;timeOfThisPhoneme&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timePerPhoneme&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;smallPhonemeBonus&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;timeForAWord&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timePerPhoneme&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;timeOfThisPhoneme&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timePerPhoneme&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;MouthsToShow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timeOfThisPhoneme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Why do I hold both phoneme and word time? Because the phonemes time are used for the mouths independently, and the word time is used by the speech synthesis.&lt;/p&gt;

&lt;p&gt;During speech, a main problem is that the call holds the program until all the speaking is done. Since the main ideia is to speech and visualization at the same time, a multi-threading approach must be done. Each time I need to speak a word, I’ll call a function from another thread to avoid interruptions and put a wait time, so the speaking is not cut in the middle. Look at the code below:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# called by each thread&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;speak_word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;waittime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;nssp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NSSpeechSynthesizer&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ve&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nssp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ve&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setVoice_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.apple.speech.synthesis.voice.Alex&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ve&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startSpeakingString_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;waittime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Call co-routine to speak&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start_new_thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;speak_word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timeForAWord&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Error: unable to start thread for audio =/&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Finally, the program uses the OpenCV to show the images of the mouths using the same time information collected before and the dictionary that maps mouths to phonemes. This part is shown below:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;    &lt;span class=&quot;c&quot;&gt;#Show Mouths&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mouth&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MouthsToShow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;phonemes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mouths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mouth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imshow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'window'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;waitKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mouth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The complete imageprototype.py code is:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;cv2&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;nltk&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;phonemes&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;thread&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt;  &lt;span class=&quot;nn&quot;&gt;AppKit&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NSSpeechSynthesizer&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#Defines&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;timePerPhoneme&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.15&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;longPhonemeBonus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.05&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;smallPhonemeBonus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.05&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# called by each thread&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;speak_word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;waittime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;nssp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NSSpeechSynthesizer&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ve&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nssp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ve&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setVoice_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.apple.speech.synthesis.voice.Alex&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ve&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startSpeakingString_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;waittime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;file_content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sample.txt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tokens&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nltk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word_tokenize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;entries&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nltk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmudict&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;start_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;TextToSpeech&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tokens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;TextToSpeech&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;end_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;## For each mouth you should put a refering mouth to show&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;## do the double check&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TextToSpeech&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# Get the right list of mouths&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;timeForAWord&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;timeOfThisPhoneme&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;MouthsToShow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ph&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;phonemes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PhonemeToMouth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'1'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;timeForAWord&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timePerPhoneme&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;longPhonemeBonus&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;timeOfThisPhoneme&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timePerPhoneme&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;longPhonemeBonus&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'0'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;timeForAWord&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timePerPhoneme&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;smallPhonemeBonus&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;timeOfThisPhoneme&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timePerPhoneme&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;smallPhonemeBonus&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;timeForAWord&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timePerPhoneme&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;timeOfThisPhoneme&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timePerPhoneme&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;MouthsToShow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timeOfThisPhoneme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Call co-routine to speak&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start_new_thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;speak_word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timeForAWord&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Error: unable to start thread for audio =/&quot;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;#Show Mouths&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mouth&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MouthsToShow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;phonemes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mouths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mouth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imshow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'window'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;waitKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mouth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;discussion&quot;&gt;Discussion&lt;/h2&gt;

&lt;p&gt;Although it is pretty easy to do this kind of coding using some existing python bindings, it seems to be a little inefficient at start. I put a small paragraph to pre-process and it takes about 2 minutes. The main reason is the phoneme match part. Since the library just gives the whole dictionary it is really painful to iterate over some thousands of words to find the one you want. Some improvements can be done at this part of the code.&lt;/p&gt;

&lt;p&gt;Also, all the speech libraries I have looked does not provide a true API to easily do the syncing. In the example I had to guess the phonemes times and use it along with the mouth visualization. Sometimes I get awful animations, totally unsync. I haven’t had time to investigate these libraries deeply, but it seems that if I want to have this level of detail, I’ll have to make my own. Besides all that, NLTK is a great way to process words into phonemes and OpenCV is really useful when dealing with images.&lt;/p&gt;

&lt;p&gt;Thanks for reading, and I appreciate any feedback. See ya.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://localhost:4000/programming/using-opencv-and-nltk-to-make-speech-synthesis-animation/&quot;&gt;Using openCV and NLTK to Make Speech Synthesis Animation&lt;/a&gt; was originally published by Luiz Guilherme at &lt;a href=&quot;http://localhost:4000&quot;&gt;Kaze's Mind&lt;/a&gt; on June 16, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[A Time Off]]></title>
  <link rel="alternate" type="text/html" href="http://localhost:4000/personal/a-time-off/" />
  <id>http://localhost:4000/personal/a-time-off</id>
  <published>2015-03-13T18:31:47+00:00</published>
  <updated>2015-03-13T18:31:47+00:00</updated>
  <author>
    <name>Luiz Guilherme</name>
    <uri>http://localhost:4000</uri>
    <email>luiz@kaze.io</email>
  </author>
  <content type="html">&lt;p&gt;These last weeks has been very stressful because I had to prepare everything before my vacation. Seems a long long time since my last time off. When a mean time off, I mean the whole month without working, or studying, or writing, etc. A completely forced disconnection of the world around. Also, seems that the more you need it, the more you can’t do it. I’m not a freaking workaholic person, but I like to see new things, study and work more sometimes just for fun. Well, It has been too much these years.&lt;/p&gt;

&lt;p&gt;To sum up, I came with a crazy idea 2 years ago, that I would make a dream come true. Since my childhood there was one place I always wanted to visit and see with my own eyes, and it is Japan. Well, seems like a not so important and hard task but, I remember when I was a kid the airplane fares were so expensive for middle class. I always liked their culture, comics, martial arts, and so on that I decided I would visit it at least once in my life.&lt;/p&gt;

&lt;p&gt;I thought that planning a trip was easy, but it is as hard as earning the money to make it happen. These 2 years I’ve been looking for reasonable air tickets, train pass, hostels, and other stuff to close the package spending not too much and maximize the days there.&lt;/p&gt;

&lt;p&gt;So, see ya guys. I’ll be back in a Month =)&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;http://localhost:4000/personal/a-time-off/&quot;&gt;A Time Off&lt;/a&gt; was originally published by Luiz Guilherme at &lt;a href=&quot;http://localhost:4000&quot;&gt;Kaze's Mind&lt;/a&gt; on March 13, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Funny Scrum Overview]]></title>
  <link rel="alternate" type="text/html" href="http://localhost:4000/scrum/funny-scrum-overview/" />
  <id>http://localhost:4000/scrum/funny-scrum-overview</id>
  <published>2015-02-26T20:50:53+00:00</published>
  <updated>2015-02-26T20:50:53+00:00</updated>
  <author>
    <name>Luiz Guilherme</name>
    <uri>http://localhost:4000</uri>
    <email>luiz@kaze.io</email>
  </author>
  <content type="html">&lt;p&gt;Since I’ve been out of the blog for a while because of my P.hD studies, I’ll keep something really funny related to my last post. I have seen many different parodies of this video, but this is one of the funiest ever.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/K1gij0JJV7A&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;


  &lt;p&gt;&lt;a href=&quot;http://localhost:4000/scrum/funny-scrum-overview/&quot;&gt;Funny Scrum Overview&lt;/a&gt; was originally published by Luiz Guilherme at &lt;a href=&quot;http://localhost:4000&quot;&gt;Kaze's Mind&lt;/a&gt; on February 26, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[A Different View of the Scrum Master Role]]></title>
  <link rel="alternate" type="text/html" href="http://localhost:4000/scrum/a-different-view-of-the-scrum-master-role/" />
  <id>http://localhost:4000/scrum/a-different-view-of-the-scrum-master-role</id>
  <published>2015-02-11T23:27:15+00:00</published>
  <updated>2015-02-11T23:27:15+00:00</updated>
  <author>
    <name>Luiz Guilherme</name>
    <uri>http://localhost:4000</uri>
    <email>luiz@kaze.io</email>
  </author>
  <content type="html">&lt;p&gt;I just have finished my first sprint as a Scrum Master, and I’m really happy about it. It is a sightly different experience for me. To sum up, as a researcher there are some differences between the software house approach of Scrum and the Researcher one. This article will summarize the Scrum Master role, and point out some of these differences. This is more a personal opinion rather than a general concept.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;figure&gt;
     &lt;a href=&quot;/images/scrum.jpg&quot;&gt;&lt;img src=&quot;/images/scrum.jpg&quot; alt=&quot;The other scrum&quot; align=&quot;middle&quot; /&gt;&lt;/a&gt;
 
     &lt;figcaption&gt;The other scrum&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h2 id=&quot;scrum&quot;&gt;Scrum&lt;/h2&gt;

&lt;p&gt;I’ll not spend time here explaining Scrum in details, there are plenty free articles about it on the web, just google it. To sum up, Scrum is a agile software(but not only) development methodology that follows the &lt;a href=&quot;http://en.wikipedia.org/wiki/Scrum_(software_development)&quot;&gt;agile manifesto&lt;/a&gt;. It has a huge impact in companies performance and enable teams to be more self-organizable, encourage collaboration and communication and accept failure as a part of the work.&lt;/p&gt;

&lt;p&gt;For more information, visit &lt;a href=&quot;http://en.wikipedia.org/wiki/Scrum_(software_development)&quot;&gt;wikipedia page&lt;/a&gt; of Scrum.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;figure&gt;
     &lt;a href=&quot;/images/scrum-terms.png&quot;&gt;&lt;img src=&quot;/images/scrum-terms.png&quot; alt=&quot;Scrum Terms&quot; align=&quot;middle&quot; /&gt;&lt;/a&gt;

     &lt;figcaption&gt;Common Scrum Terms&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h3 id=&quot;the-workflow&quot;&gt;The Workflow&lt;/h3&gt;

&lt;p&gt;In scrum, the development is divided basically in iterations called &lt;strong&gt;Sprints&lt;/strong&gt;. It has 2/4 weeks length and has some artifacts and meetings to be addressed. Initially the &lt;strong&gt;Team&lt;/strong&gt; must bring &lt;strong&gt;Stories&lt;/strong&gt; from a &lt;strong&gt;Product Backlog&lt;/strong&gt; previously created to the &lt;strong&gt;Sprint Backlog&lt;/strong&gt;, and commits to finish all these tasks. The &lt;strong&gt;Sprint Backlog&lt;/strong&gt; is not modified until the end of the &lt;strong&gt;Sprint&lt;/strong&gt;. These &lt;strong&gt;Stories&lt;/strong&gt; are broken down into &lt;strong&gt;Tasks&lt;/strong&gt; that could be atomically done by the &lt;strong&gt;Team&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;During the &lt;strong&gt;Sprint&lt;/strong&gt;, the &lt;strong&gt;Team&lt;/strong&gt; must communicate daily about the ongoing progress and make progress in these tasks. At the end of each &lt;strong&gt;Sprint&lt;/strong&gt;, an increment to the final product is added.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;figure&gt;
     &lt;a href=&quot;/images/scrum-workflow.png&quot;&gt;&lt;img src=&quot;/images/scrum-workflow.png&quot; alt=&quot;A Basic Scrum Workflow&quot; align=&quot;middle&quot; /&gt;&lt;/a&gt;

     &lt;figcaption&gt;A Basic Scrum Workflow&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h3 id=&quot;the-meetings&quot;&gt;The Meetings&lt;/h3&gt;

&lt;p&gt;Let’s make a quick overview of the most important meeting in Scrum.&lt;/p&gt;

&lt;h4 id=&quot;planning&quot;&gt;Planning&lt;/h4&gt;

&lt;p&gt;Done in the beginning and every &lt;strong&gt;Sprint&lt;/strong&gt; beginning. The objective of this meeting is address &lt;strong&gt;Business Value&lt;/strong&gt; and &lt;strong&gt;Effort&lt;/strong&gt; to each &lt;strong&gt;Story&lt;/strong&gt; in the &lt;strong&gt;Product Backlog&lt;/strong&gt;. To start a &lt;strong&gt;Sprint&lt;/strong&gt; the &lt;strong&gt;Team&lt;/strong&gt; and the PO must define a &lt;strong&gt;Sprint Backlog&lt;/strong&gt;, that is a subset of prioritized &lt;strong&gt;Stories&lt;/strong&gt; from the &lt;strong&gt;Product Backlog&lt;/strong&gt; that will be developed by the &lt;strong&gt;Team&lt;/strong&gt; during the next &lt;strong&gt;Sprint&lt;/strong&gt;.&lt;/p&gt;

&lt;h4 id=&quot;daily-meeting&quot;&gt;Daily Meeting&lt;/h4&gt;

&lt;p&gt;Done every day for 15 minutes. The main goal is to spread the word about the ongoing process of all tasks the &lt;strong&gt;Team&lt;/strong&gt; is developing, identify any impediments that may be delaying the &lt;strong&gt;Tasks&lt;/strong&gt; and promote communication among the &lt;strong&gt;Team&lt;/strong&gt; members.&lt;/p&gt;

&lt;h4 id=&quot;review&quot;&gt;Review&lt;/h4&gt;

&lt;p&gt;Done every end of &lt;strong&gt;Sprint&lt;/strong&gt;. It is the time for the stakeholders to see the progress of the product. The increment must be shown, integrated and well tested at this time. Generally the &lt;strong&gt;Team&lt;/strong&gt; briefly run thru all the &lt;strong&gt;Stories&lt;/strong&gt;, point out the facts that happened during the &lt;strong&gt;Sprint&lt;/strong&gt;, and show a Demo of what has been created in the last weeks. This meeting is focused in the product.&lt;/p&gt;

&lt;h4 id=&quot;retrospective&quot;&gt;Retrospective&lt;/h4&gt;

&lt;p&gt;Also one every end of &lt;strong&gt;Sprint&lt;/strong&gt;. The &lt;strong&gt;Team&lt;/strong&gt; brainstorms about “What went well”, “What could be improved” and “Actions for next Sprint”. This helps the team adapt the Scrum process to it needs and make a self-evaluation of the entire work. This meeting is focused on the process.&lt;/p&gt;

&lt;h3 id=&quot;the-roles&quot;&gt;The Roles&lt;/h3&gt;

&lt;p&gt;Scrum define 3 important roles to the process. I’ll talk about the first two in a glance, and a little more about the Scrum Master.&lt;/p&gt;

&lt;h4 id=&quot;the-product-owner&quot;&gt;The Product Owner&lt;/h4&gt;

&lt;p&gt;This is the guy who owns the &lt;strong&gt;Product Backlog&lt;/strong&gt;. He has the sensibility and the social skills to extract from all the interested stackeholders what &lt;strong&gt;Stories&lt;/strong&gt; will give bigger value to the product. Also, he must be a ninja in prioritizing tasks.&lt;/p&gt;

&lt;h4 id=&quot;the-team&quot;&gt;The Team&lt;/h4&gt;

&lt;p&gt;These are the guys who pull the sleeves and make great things happen. They are responsible for calculating the &lt;strong&gt;Effort&lt;/strong&gt; of the &lt;strong&gt;Stories&lt;/strong&gt;, and consequently the Return of Value(ROI) of each one, execute the sprint, present the review, and improve the process during the retrospective.&lt;/p&gt;

&lt;h4 id=&quot;the-scrum-master&quot;&gt;The Scrum Master&lt;/h4&gt;

&lt;p&gt;Finally the one I’ve been working as. For me, the scrum master is the guy who:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ensure that the methodology is being well applied&lt;/li&gt;
  &lt;li&gt;Solve impediments&lt;/li&gt;
  &lt;li&gt;Make meetings be more objective and powerful to the team&lt;/li&gt;
  &lt;li&gt;Does not manage anyone =)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;People often confuse the role of &lt;strong&gt;Scrum Master&lt;/strong&gt; as a Lead or Manager in the team. It can be ( I think its good, but not mandatory ) also a member of the team, helping the development of the project by coding or doing other stuff. Also, people tend to be “powered” by this role. It does not mean that you are superior to anyone, in scrum all the roles and hierarchies presented is supposed to be in the same level. Everyone helps to deliver the project. The &lt;strong&gt;Scrum Master&lt;/strong&gt; must ensure that is is delivered in the best process possible for that team.&lt;/p&gt;

&lt;h2 id=&quot;scrum-in-a-research-environment&quot;&gt;Scrum in a Research Environment&lt;/h2&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;figure&gt;
     &lt;a href=&quot;/images/help.jpg&quot;&gt;&lt;img src=&quot;/images/help.jpg&quot; alt=&quot;HELP!&quot; align=&quot;middle&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;This section picture reflects well our first sensation of using scrum in a research environment. I had previous experience using scrum as a developer, but these were essentially coding games. Research has a bunch of differences from a generic software house that must be taken into account.&lt;/p&gt;

&lt;h3 id=&quot;adapt-to-the-work&quot;&gt;Adapt to the work&lt;/h3&gt;

&lt;p&gt;The first one is the higher tend to change the direction of the project during its development. Research is unpredictable, period. One day all your experiments could be point to a promising direction, the other day, with deeper testing and prototyping, you could be entirely wrong ( or had found a one in a million case ). The consequence is that, the project is a living entity that changes all the time ( in goal as well ), and it has a huge impact in the backlog and prioritization. The PO must ensure that, not only the direction chosen is a good one, but also the he has some other cards to play if the promising one fails.&lt;/p&gt;

&lt;p&gt;Second, the work process is not totally based on coding. Actually, coding could be only a support of the research. You can do no code at all in some of them. It is totally based on studying, create hypothesis to improve or deliver something and validate it with experiments. The first question our PO addressed in a course was “What is a Research Deliverable in the end of a sprint?” . It could be a Systematic Review, an Article, a Data Analysis, a Testing Report, and other things rather than a functional binary to show. We adapted our reviews to expect these as “increments”&lt;/p&gt;

&lt;p&gt;Last but not least, research requires collaboration with many people that are not accessible everyday. In my case, I interact with people from academia like Professors and graduate students, and with people inside of the company like Engineers, Sales, Marketing and so on. Everyone has an important contribution to the research. We had to deal with the possible decrease of communication caused by the distance and partial commitment to the projects. Every team has to improve it as much as it can.&lt;/p&gt;

&lt;h3 id=&quot;problems-found&quot;&gt;Problems Found&lt;/h3&gt;

&lt;p&gt;I consider myself a different researcher ( at least in Brazil ) because I always liked to be part of the Academia and also the Industry. Since the very beginning of my Master I work as a Developer/Researcher in parallel. People that comes only from the Academia sometimes misses important things that you only learn (well) in a company. The one I thing is valuable the most is “working process”. Not talking of scrum here, but any working process that companies uses. As a researcher in academia, you generally find one that is suitable for you and use it. In companies, generally you must adapt to the one that the companies culture uses.&lt;/p&gt;

&lt;p&gt;In our case, there has been a decision to switch to agile. Some people find it painful, especially the ones that came from a long term in academia. One of the agile principles is to keep the team motivated in the methodology and willing to have a discipline in using it everyday. I found hard to convince sometimes people that they could improve their working process using it ( specially the older ones =) ), but also, it is important to have a different point of view and improve the process from time to time using oldie good stuff.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I’ve been learning a lot the last few months. I think this role improves not only our own capacity of solving problems during a project, but makes me think everyday of how am I doing my work, and what can I do to make things better. This motivation is an excellent fuel to a busy day.&lt;/p&gt;

&lt;p&gt;If you came until here, thanks! Love to interact via comments if you like or dislike this article.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://localhost:4000/scrum/a-different-view-of-the-scrum-master-role/&quot;&gt;A Different View of the Scrum Master Role&lt;/a&gt; was originally published by Luiz Guilherme at &lt;a href=&quot;http://localhost:4000&quot;&gt;Kaze's Mind&lt;/a&gt; on February 11, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[P.hD Diary - PCL Installation and Configuration on OSX]]></title>
  <link rel="alternate" type="text/html" href="http://localhost:4000/phd/p-hd-diary-pcl-installation-and-configuration-on-osx/" />
  <id>http://localhost:4000/phd/p-hd-diary-pcl-installation-and-configuration-on-osx</id>
  <published>2015-01-29T23:02:44+00:00</published>
  <updated>2015-01-29T23:02:44+00:00</updated>
  <author>
    <name>Luiz Guilherme</name>
    <uri>http://localhost:4000</uri>
    <email>luiz@kaze.io</email>
  </author>
  <content type="html">&lt;p&gt;As a part of my investigatory phase right now I was looking for good libraries that work good with Kinect. My personal computer is an old pacman Macbook Pro that is been very good thru all these years.  In this post I’ll explain how to setup a Mac properly to use PCL libraries ( no nostalgic posts right now ). For more information about the library itself visit &lt;a href=&quot;http://pointclouds.org/&quot;&gt;http://pointclouds.org/&lt;/a&gt;. This tutorial was done in a machine with OSX 10.10 ( Yosemite ), 4GB DDR3 memory and a Core2Duo Processor. Differences for different configurations may happen.&lt;/p&gt;

&lt;iframe width=&quot;420&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/x3SaWQkPsPI&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;PCL Kinect Example&lt;/p&gt;

&lt;p&gt;My biggest challenge here was to see which of the (old) tutorials [ &lt;a href=&quot;http://pointclouds.org/downloads/macosx.html&quot;&gt;1&lt;/a&gt;, &lt;a href=&quot;http://www.pcl-users.org/file/n4022018/PCL_Development_Build_-_Mac_OS_X.pdf&quot;&gt;2&lt;/a&gt;, &lt;a href=&quot;https://github.com/totakke/homebrew-openni2&quot;&gt;3&lt;/a&gt;, &lt;a href=&quot;http://www.pointclouds.org/documentation/tutorials/installing_homebrew.php&quot;&gt;4&lt;/a&gt;, &lt;a href=&quot;http://digitizor.com/2014/06/29/fix-cowardly-refusing-sudo-error-brew/&quot;&gt;5&lt;/a&gt;, among others… ] I’ve found was technically right. Before anyone say that solve this in other way, I’d say that this was the simpler one that choose. I do love free libraries and collaborative softwares, but I prefer to get a very good closed and tested package with all the dependencies configured rather then compile all in a hard way. This solution tries to rely as much as possible in brew ( a package manager for OSX ), and cmake. There are other solutions that use macports and/or manual compilation. I found these harder than using brew.&lt;/p&gt;

&lt;h2 id=&quot;assumptions&quot;&gt;Assumptions&lt;/h2&gt;

&lt;p&gt;I assume that everyone here has a Mac with Xcode installed and configured. Also, you must ( If you haven’t already ) have the Command Line Tools installed. If you don’t, download Xcode via App Store, then create a developer account at &lt;a href=&quot;http://developer.apple.com&quot;&gt;Apple Developer Website&lt;/a&gt;, go to the  &lt;a href=&quot;https://developer.apple.com/downloads/index.action&quot;&gt;download section&lt;/a&gt; and get the pkg to install. Its installation is purely straightforward.&lt;/p&gt;

&lt;h2 id=&quot;brew-packages&quot;&gt;Brew Packages&lt;/h2&gt;

&lt;h3 id=&quot;installing-brew&quot;&gt;Installing Brew&lt;/h3&gt;

&lt;p&gt;First things first, lets install brew. It pretty simple, just open a terminal window and type:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ruby &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-fsSL&lt;/span&gt; https://raw.githubusercontent.com/Homebrew/install/master/install&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This will automatically get and install all the necessary binaries to run the package. After installing, I’ve made a simple config to use sudo with brew because of some permission errors I was having in my machine. This is totally optional, but if you face these problems just type:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;chown root:wheel &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;which brew&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;installing-pcl-dependencies&quot;&gt;Installing PCL Dependencies&lt;/h3&gt;

&lt;p&gt;Before installing PCL, there are some dependencies that you must install ( and make sure that they are properly linked ). They are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Boost 1.57&lt;/li&gt;
  &lt;li&gt;Flann 1.8.4&lt;/li&gt;
  &lt;li&gt;Qt 4.8.6&lt;/li&gt;
  &lt;li&gt;GLEW 1.11&lt;/li&gt;
  &lt;li&gt;VTK 6.1.0&lt;/li&gt;
  &lt;li&gt;Openni 1.5.8 and 2&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One of the good things of using a package manager is that is easy to find and trigger an installation of all these dependencies. In brew, you must “tap” two repositories and before installing these packages. The commands are:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;brew update
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;brew tap homebrew/science
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;brew tap totakke/openni2&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It will download some git repositories with information about those packages. Finally, to install the dependencies just type:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;brew install &lt;span class=&quot;nt&quot;&gt;-vd&lt;/span&gt; sip pyqt libusb cmake boost flann qhull glew qt vtk openni openni2 openni2-freenectdriver&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It will take a long time, enjoy a good book in the middle time =)&lt;/p&gt;

&lt;h3 id=&quot;pcl-install&quot;&gt;PCL Install&lt;/h3&gt;

&lt;p&gt;Similar to the previous step, now we just have to tell brew to install PCL with the command:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;brew install &lt;span class=&quot;nt&quot;&gt;-vd&lt;/span&gt; pcl &lt;span class=&quot;nt&quot;&gt;--HEAD&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--with-openni&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--with-examples&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Just a little parentheses here. The option “—HEAD” says that it gonna get the HEAD of PCL repository, which is now PCL 1.8. In their website, the downloadable version is 1.6. I had a lot of trouble using the 1.6 under Yosemite, so I do not recommend using it. The “–with-openni” option will assume that you’re gonna use this library with PCL ( which is optional, but mandatory if you’d like to use Kinect Viewer ).&lt;/p&gt;

&lt;p&gt;Again, grab a good book and wait for a long compile time.&lt;/p&gt;

&lt;h2 id=&quot;post-configs&quot;&gt;Post Configs&lt;/h2&gt;

&lt;p&gt;If everything went well ( and I hope it did ), there’s some post configs you must do. For OpenNi 2 libs you must export some environments vars using:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;OPENNI2_INCLUDE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/include/ni2
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;OPENNI2_REDIST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/lib/ni2&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You might want to put these commands on your ~/.bash_profile as well to avoid doing this command again.&lt;/p&gt;

&lt;h2 id=&quot;building-and-testing&quot;&gt;Building and Testing&lt;/h2&gt;

&lt;p&gt;Following the &lt;a href=&quot;http://pointclouds.org/documentation/tutorials/openni_grabber.php#openni-grabber&quot;&gt;Kinect Example&lt;/a&gt; found in their site, and making some few modifications, lets make a simple test just to show Kinect’s video. Create a file called open_viewer_simple.cpp with the following code:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;pcl/io/openni_grabber.h&amp;gt;
#include &amp;lt;pcl/visualization/cloud_viewer.h&amp;gt;
&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SimpleOpenNIViewer&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;SimpleOpenNIViewer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;viewer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PCL OpenNI Viewer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

     &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cloud_cb_&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pcl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PointCloud&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pcl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PointXYZ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ConstPtr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cloud&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;viewer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wasStopped&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;viewer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;showCloud&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cloud&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

     &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;pcl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Grabber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pcl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OpenNIGrabber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

       &lt;span class=&quot;n&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pcl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PointCloud&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pcl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PointXYZ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ConstPtr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bind&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SimpleOpenNIViewer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cloud_cb_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

       &lt;span class=&quot;n&quot;&gt;interface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;registerCallback&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

       &lt;span class=&quot;n&quot;&gt;interface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

       &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;viewer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wasStopped&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this_thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;posix_time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seconds&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

       &lt;span class=&quot;n&quot;&gt;interface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stop&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

     &lt;span class=&quot;n&quot;&gt;pcl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;visualization&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CloudViewer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;viewer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

 &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;SimpleOpenNIViewer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And also, a CMakeLists.txt in the same folder with the following content:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;cmake_minimum_required&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;VERSION 2.8 FATAL_ERROR&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

project&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;openni_grabber&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

find_package&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;PCL 1.2 REQUIRED&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

include_directories&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PCL_INCLUDE_DIRS&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
link_directories&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PCL_LIBRARY_DIRS&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
add_definitions&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PCL_DEFINITIONS&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

IF &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;APPLE&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    FIND_PATH&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; GLEW_INCLUDE_DIR glew.h
      /System/Library/Frameworks/GLEW.framework/Versions/A/Headers
      &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;OPENGL_LIBRARY_DIR&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    SET&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;GLEW_GLEW_LIBRARY &lt;span class=&quot;s2&quot;&gt;&quot;-lGLEW&quot;&lt;/span&gt; CACHE STRING &lt;span class=&quot;s2&quot;&gt;&quot;GLEW library for OSX&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    SET&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;GLEW_cocoa_LIBRARY &lt;span class=&quot;s2&quot;&gt;&quot;-framework Cocoa&quot;&lt;/span&gt; CACHE STRING &lt;span class=&quot;s2&quot;&gt;&quot;Cocoa framework for OSX&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  ENDIF &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;APPLE&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
add_executable &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;openni_grabber openni_viewer_simple.cpp&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
target_link_libraries &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;openni_grabber &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PCL_LIBRARIES&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Another parentheses here. I added the IF(APPLE) section because somehow make was getting a different configuration for GLEW which broke the compilation. This block is to make sure the the flag “-lGLEW” is called instead of “-framework GLEW”. Since we’ve installed everything via brew, this is the right way to call GLEW library&lt;/p&gt;

&lt;p&gt;Now let’s build everything. In a terminal type:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mkdir build
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;build
cmake ..&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In the build folder you may have an executable called “openni_grabber”. Just execute it typing:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;./openni_grabber&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;conclusions&quot;&gt;Conclusions&lt;/h2&gt;

&lt;p&gt;After a week of building PCL in many different ways, this was the one that worked and was easiest to reproduce. Since this is not clearly found in one tutorial, I thought it was worth of a blog post. I still have some issues related to the library, but I’ll may write it down in a future opportunity.&lt;/p&gt;

&lt;p&gt;If you read until here, thanks! Leave a feedback in the comments, and see ya!&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://localhost:4000/phd/p-hd-diary-pcl-installation-and-configuration-on-osx/&quot;&gt;P.hD Diary - PCL Installation and Configuration on OSX&lt;/a&gt; was originally published by Luiz Guilherme at &lt;a href=&quot;http://localhost:4000&quot;&gt;Kaze's Mind&lt;/a&gt; on January 29, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[P.hD Diary - the Beginning]]></title>
  <link rel="alternate" type="text/html" href="http://localhost:4000/phd/p-hd-diary-the-beginning/" />
  <id>http://localhost:4000/phd/p-hd-diary-the-beginning</id>
  <published>2015-01-25T23:27:26+00:00</published>
  <updated>2015-01-25T23:27:26+00:00</updated>
  <author>
    <name>Luiz Guilherme</name>
    <uri>http://localhost:4000</uri>
    <email>luiz@kaze.io</email>
  </author>
  <content type="html">&lt;p&gt;Since this is a personal blog, I’ll try to do some stuff as a journal like as well. As you may notice I’m a P.hD Student also, and one of the thing that made me come again to the academia was the willing to study a little bit more things in the Entertainment area. I do work as a researcher now, but it is more for the Oil &amp;amp; Gas Field. They have a lot of interesting problems as well, but my dearest passion still resides in Entertainment.&lt;/p&gt;

&lt;p&gt;What is my project? That’s a hard question to respond in less than one year in the P.hD. I’ve submitted a project to start working with Facial Animation using new capture techniques such as Kinect. Why? Well, I was looking into mocap research when I faced this article:&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/DBoChIFrj2c&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;It is a 2013 Siggraph’s paper about realtime acquisition and avatar animation. The full paper is &lt;a href=&quot;http://lgg.epfl.ch/publications/2013/MIG.pdf'http://lgg.epfl.ch/publications/2013/MIG.pdf&quot;&gt;here&lt;/a&gt;. This opened my mind to the real state of the technology. We not only don’t need points anymore, but also has much more data to deal with.&lt;/p&gt;

&lt;p&gt;The work is just in the beginning. My idea is to fill the blog with some of the stuff I’ve been researching and also exploring Tools and Techniques that I study.&lt;/p&gt;

&lt;p&gt;See ya!&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://localhost:4000/phd/p-hd-diary-the-beginning/&quot;&gt;P.hD Diary - the Beginning&lt;/a&gt; was originally published by Luiz Guilherme at &lt;a href=&quot;http://localhost:4000&quot;&gt;Kaze's Mind&lt;/a&gt; on January 25, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[The Nostalgic Wololo]]></title>
  <link rel="alternate" type="text/html" href="http://localhost:4000/games/the-nostalgic-wololo/" />
  <id>http://localhost:4000/games/the-nostalgic-wololo</id>
  <published>2015-01-19T19:22:38+00:00</published>
  <updated>2015-01-19T19:22:38+00:00</updated>
  <author>
    <name>Luiz Guilherme</name>
    <uri>http://localhost:4000</uri>
    <email>luiz@kaze.io</email>
  </author>
  <content type="html">&lt;p&gt;Back to the 2000 year, I just moved ( again ) with my parents to a new city in the countryside of Rio de Janeiro. I had just a 56Kbps dial-up connection that I could just use at night. Here in Brazil, between midnight and 6am if you make a call, no matter how long it was, they would only charge you in one ‘pulse’.&lt;/p&gt;

&lt;p&gt;That was the time of the beginning ( at least for me ) of IRC. Also, it had been the time of napster and the prelude of online sharing. Since I was still in High School with no friends to hang out, I loved to spend nights in front of the computer chatting, and also finding something nice to play during the night.&lt;/p&gt;

&lt;p&gt;During these nights, I found a game that would steal my nights for a very very long time, called Age of Empires 2. Ensemble Studios, the maker, just released an expansion called The Conquers that not only corrected and improved a lot of stuff from the original game, but also released new ‘civilizations’ to play. Nevertheless, It was groundbreaking during that time. I’ll talk more about the game itself in my vision and the mechanics later.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;figure&gt;
     &lt;a href=&quot;/images/age00.png&quot;&gt;&lt;img src=&quot;/images/age00.png&quot; alt=&quot;The box of Age of Empires&quot; align=&quot;middle&quot; /&gt;&lt;/a&gt;
 
     &lt;figcaption&gt;The box of Age of Empires&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;&amp;lt;Nostalgic mode&amp;gt;&lt;/p&gt;

&lt;p&gt;I remember of having a few sheets of paper with some strategies of different civilizations  and use is as a cheat during the matches. Although we had internet, is was not rare that some friends that i met on the game decided to make a plan party, so they’d go to someone’s house with giant CPUs and CRT heavy monitors , buy some pizza and coke, and play all night long.&lt;/p&gt;

&lt;p&gt;I think this game not only made my nights less boring, but also leverage my interest in the gaming area and how it works.&lt;/p&gt;

&lt;p&gt;&amp;lt;/Nostalgic mode&amp;gt;&lt;/p&gt;

&lt;p&gt;I’ll point out some features of the game (as I remember) and my opinion of it.&lt;/p&gt;

&lt;h2 id=&quot;mechanics&quot;&gt;Mechanics&lt;/h2&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;figure&gt;
     &lt;a href=&quot;/images/age01.jpg&quot;&gt;&lt;img src=&quot;/images/age01.jpg&quot; alt=&quot;Age’s Gameplay&quot; align=&quot;middle&quot; /&gt;&lt;/a&gt;
 
     &lt;figcaption&gt;Age’s Gameplay&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;The game is basically a RTS that had several civilizations. Each one has a special unit and some exclusive advantages. That time, this was not so well funded yet and Age helped a lot. These civilizations act like a giant “rock, paper, scissors” into them mechanics, any civilization would have a very good atribute/use and flaws that could be explored by the other players.&lt;/p&gt;

&lt;p&gt;During the game itself generally the max population was 200, and the player must balance the resource production with the army created. Quick response to changes and a good strategy was always a part of the game. This gameplay had so much evolution that even Economic Schools use it nowadays to teach a creative thinking in their students and give them classes about Resources x Production (take a look &lt;a href=&quot;http://www.coursehero.org/course/starcraft-theory-and-strategy&quot;&gt; here &lt;/a&gt;) .&lt;/p&gt;

&lt;p&gt;You could make alliances and help your pals with resources to leverage the team against other enemies. But if the game was not a team match literally you’ll never know when someone could betray you. The evolutionary system was great and intuitive.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;figure&gt;
     &lt;a href=&quot;/images/age02.jpg&quot;&gt;&lt;img src=&quot;/images/age02.jpg&quot; alt=&quot;End game statistics&quot; align=&quot;middle&quot; /&gt;&lt;/a&gt; 
     &lt;figcaption&gt;End game statistics&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;For me, one of the coolest thing in the game was the ending screen. We found some statistics like battles and proportions of army and villagers of all the players in the world. I use this as a learning from every battle. Incremental learning can be one of many consequences of any RTS game. During the time I used to play, I should change my strategy every time I play since my friends would find a flaw for every new trick I apply once. I also must anticipate that from them.&lt;/p&gt;

&lt;h2 id=&quot;sounds&quot;&gt;Sounds&lt;/h2&gt;

&lt;p&gt;One thing that I cannot leave without mentions was the sounds during the game. They were really rich and various with a lot of acting on it. When I was in battle that were a lot of random death sounds at the same time giving the sense of action and motion on it. It is surely one of the best features in the game. The ideia of immersion was not so well defined that time. during a game you barely notice all those tweaks, but if people try to play in a mute mode you’d have that “there’s something missing” feeling.&lt;/p&gt;

&lt;iframe width=&quot;420&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/2oTUvjgvVWE&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;
&lt;/iframe&gt;

&lt;h2 id=&quot;multiplayer&quot;&gt;Multiplayer&lt;/h2&gt;

&lt;p&gt;Ok, I’ll try not to be too nostalgic here. The multiplayer for that time was just great. As I said before, my connection was only a 56kbps dial up at that time, and if nothing was doing in parallel (like downloading music or other stuff) the game worked seamless for up to 8 players! That was unbelievable that time. We use to stick with the Lan parties though, because, at least for me, it was way more funnier when everybody was close and we could see the face of each other.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;figure&gt;
     &lt;a href=&quot;/images/age03.png&quot;&gt;&lt;img src=&quot;/images/age03.png&quot; alt=&quot;Multiplayer’s Pre-match&quot; align=&quot;middle&quot; /&gt;&lt;/a&gt;
 
     &lt;figcaption&gt;Multiplayer’s Pre-match&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h2 id=&quot;cons&quot;&gt;Cons&lt;/h2&gt;

&lt;p&gt;No one cared about the single player, period. I’ve never hear of someone that loved this part of the game. they had really boring missions, and it seems like a very very long unnecessary tutorial for the multiplayer game. Also, the AI, was a little repetitive if you get the tricks fast. I saw people winning the hardest dozen times, but it does not reflect with real people.&lt;/p&gt;

&lt;h2 id=&quot;nowadays&quot;&gt;Nowadays&lt;/h2&gt;

&lt;p&gt;They’ve made a very good HD edition, and tried to revive the series with and online game, but I think that nowadays all the mobas and Starcraft like games got too much space. That’s a shame for such an incredible title.&lt;/p&gt;

&lt;h2 id=&quot;extra-the-wololo-meme&quot;&gt;Extra: The Wololo meme&lt;/h2&gt;

&lt;p&gt;It is funny like some things here in Brazil are greater than other parts of the world. Although this meme is a little nerdy ( you can say everything you want, but a lot of people that used the meme did not play Age of Empires at all, or does not even know that was part of a game ), it spread a lot. It was happy from one side ( for the hope of renewing the series ), but sad in another side. It got too saturated(dunno if this is the best expression in english). So as fast as it got spread, it vanished. But, is nice to remember =)&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;figure&gt;
     &lt;a href=&quot;/images/ageWololo.jpg&quot;&gt;&lt;img src=&quot;/images/ageWololo.jpg&quot; alt=&quot;Even the pope..&quot; align=&quot;middle&quot; /&gt;&lt;/a&gt;
 
     &lt;figcaption&gt;Even the pope...&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://localhost:4000/games/the-nostalgic-wololo/&quot;&gt;The Nostalgic Wololo&lt;/a&gt; was originally published by Luiz Guilherme at &lt;a href=&quot;http://localhost:4000&quot;&gt;Kaze's Mind&lt;/a&gt; on January 19, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Hello World]]></title>
  <link rel="alternate" type="text/html" href="http://localhost:4000/programming/hello-world/" />
  <id>http://localhost:4000/programming/hello-world</id>
  <published>2015-01-11T00:01:04+00:00</published>
  <updated>2015-01-11T00:01:04+00:00</updated>
  <author>
    <name>Luiz Guilherme</name>
    <uri>http://localhost:4000</uri>
    <email>luiz@kaze.io</email>
  </author>
  <content type="html">&lt;p&gt;I think that I have no powers to overhelm such a big tradition, so…&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello World!&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;// Returns Safely =)
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Why C? Even though I have been exposed to many others and generally work with another language I also come back to it. I had some friends at college that used to hate it, they say “That language that has that * also creeps the hell of me”.&lt;/p&gt;

&lt;p&gt;For me it was different, dunno why. My first computer was a 386 that had a MS-DOS and a Windows on the top of it. I used to make all the windows tutorials over and over again, and then come back to the command line and learn the few tricks I studied. C always remembers be that, during that time, it was the basis of almost every thing. Nowadays it always remembers me that if I want something really fast and low level based, I should use it. I’m kinda of nostalgic right now.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://localhost:4000/programming/hello-world/&quot;&gt;Hello World&lt;/a&gt; was originally published by Luiz Guilherme at &lt;a href=&quot;http://localhost:4000&quot;&gt;Kaze's Mind&lt;/a&gt; on January 10, 2015.&lt;/p&gt;</content>
</entry>

</feed>
